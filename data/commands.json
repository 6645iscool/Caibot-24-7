[null,{"name":"Test","permissions":"ADMINISTRATOR","restriction":"1","actions":[{"channel":"0","varName":"","message":"This is a test lmaao","storage":"0","varName2":"","name":"Send Message"}]},{"name":"help","permissions":"NONE","restriction":"1","actions":[{"channel":"0","varName":"","message":"```\n\nHelp For CaiBot!\n\n?help                   Lists available commands\n?sendEmbed              Sends an embed message\n?userInfo               Displays the user's information\n?channelInfo            Displays the channel's information\n?roleInfo [role-name]   Displays info for the role\n?slap [@user]           Slaps the mentioned user\n?flipCoin               Returns \"Heads\" or \"Tails\"\n?genNumber [min] [max]  Returns a random number\n?gold                   Display's the user's gold\n?gamble                 The user randomly gains or loses some gold\n?level                  To see your level\n?rlevel                 Reset your level\n?setnick                Give the bot a nickname\n?getavatar              Get somewone avatar\n?getusercard            Get somewone usercard\n\n                       Minigames Commands\n                                |\n                                v\n?deathbsettings help - Displays this help message with command information and usage  \n?deathbsettings add - Starts a prompt where you can add your own events/actions onto the current deathbattle events/actions  \n?peathbsettings list - Displays a lsit of deathbattle events/actions  \n?deathbsettings remove {event/action} - Removes a certain action from the deathbattle events/actions  \n?deathbsettings info [action/event] - Shows info for provided action/event\n?inviteinfo [@player] or !inviteinfo - To check a player's invites \n?inviteclear - Clear a player's invites (Requires manage server permission to use)\n?invitetop - Players with the most invites\n?invitelk [invite code/invite link] - Gives information about the invite\n?playerinvite [@player] - Shows what invite the player used to join the server\n?tts [text] - Takes input of text and turns it into a mp3 speech file, sending it to the same channel\n?ttsvc [text]- Takes input of text and turns it into a mp3 speech file, sending it to the same channel and then joining command author's vc to speak the message (The input has to have more than 47 characters)\n\n```","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"}]},{"name":"dnd","permissions":"ADMINISTRATOR","restriction":"1","actions":[{"status":"3","name":"Set Bot Status"},{"channel":"0","varName":"","message":":hammer_pick:  >> *Bot Status set to:* **DO NOT DISTURB**","storage":"0","varName2":"","name":"Send Message"}]},{"name":"online","permissions":"ADMINISTRATOR","restriction":"1","actions":[{"status":"0","name":"Set Bot Status"},{"channel":"0","varName":"","message":":hammer_pick:  >> *Bot Status set to:* **ONLINE**","storage":"0","varName2":"","name":"Send Message"}]},{"name":"away","permissions":"ADMINISTRATOR","restriction":"1","actions":[{"status":"1","name":"Set Bot Status"},{"channel":"0","varName":"","message":":hammer_pick:  >> *Bot Status set to:* **AWAY**","storage":"0","varName2":"","name":"Send Message"}]},{"name":"setnick","permissions":"MANAGE_NICKNAMES","restriction":"1","actions":[{"info":"1","infoIndex":"1","storage":"1","varName":"name","name":"Store Command Params"},{"server":"0","varName":"","nickname":"${tempVars(\"name\")}","name":"Set Bot Nickname"}]},{"name":"Kick","permissions":"KICK_MEMBERS","restriction":"1","actions":[{"member":"0","varName":"","reason":"U have been kicked!","name":"Kick Member"},{"channel":"0","varName":"","message":"${member} U have been kicked! U get a last chance back! ${mentionedUser}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"mute","permissions":"MUTE_MEMBERS","restriction":"1","actions":[{"member":"0","varName":"","mute":"0","name":"Set Member Mute"},{"channel":"0","varName":"","message":"${member} U have been muted! ${mentionedUser}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"unmute","permissions":"MUTE_MEMBERS","restriction":"1","actions":[{"member":"0","varName":"","mute":"1","name":"Set Member Mute"},{"channel":"0","varName":"","message":"${member} U have been unmuted! ${mentionedUser}","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"}]},{"name":"ban","permissions":"BAN_MEMBERS","restriction":"1","actions":[{"member":"0","varName":"","reason":"","name":"Ban Member"},{"channel":"0","varName":"","message":"${member} U have been banned! ${mentionedUser}","storage":"0","varName2":"","name":"Send Message"}]},{"name":"helpadmin","permissions":"ADMINISTRATOR","restriction":"1","actions":[{"channel":"0","varName":"","message":"```\n\nHelp For Administration from CaiBot!\n```\n\n=================================================================\n```\n-ban >> You Can Ban Somewone\n-kick >> You Can Kick Somewone\n-Mute >> You Can Mute Somewone\n-unmute >> You can Unmute Somewone\n-dnd >> Sets the bot status to Do Not Disturb\n-away >> Sets the bot status to Away\n-online >> Sets the bot status to online\n\n```","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"}]},{"name":"gold","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","dataName":"gold","defaultVal":"0","storage":"1","varName2":"myGold","name":"Store Member Data"},{"channel":"0","varName":"","message":"${member}, you currently have ${tempVars(\"myGold\")} gold.","storage":"0","varName2":"","name":"Send Message"}]},{"name":"gamble","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","dataName":"gold","defaultVal":"0","storage":"1","varName2":"myGold","name":"Store Member Data"},{"storage":"1","varName":"result","min":"1","max":"10","name":"Generate Random Number"},{"storage":"1","varName":"result","changeType":"1","value":"-5","name":"Control Variable"},{"storage":"1","varName":"result","comparison":"1","value":"0","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"2","name":"Check Variable"},{"channel":"0","varName":"","message":"You did not win or lose any gold.","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"storage":"1","varName":"result","comparison":"4","value":"0","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Variable"},{"channel":"0","varName":"","message":"You won ${tempVars(\"result\")} gold!","storage":"0","varName2":"","name":"Send Message"},{"member":"1","varName":"","dataName":"gold","changeType":"1","value":"tempVars(\"result\")","name":"Control Member Data"},{"name":"End Action Sequence"},{"storage":"1","varName":"result","comparison":"3","value":"0","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"channel":"0","varName":"","message":"You lost ${-tempVars(\"result\")} gold...","storage":"0","varName2":"","name":"Send Message"},{"member":"1","varName":"","dataName":"gold","changeType":"1","value":"tempVars(\"result\")","name":"Control Member Data"},{"member":"1","varName":"","dataName":"gold","comparison":"3","value":"0","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Member Data"},{"member":"1","varName":"","dataName":"gold","changeType":"0","value":"0","name":"Control Member Data"}]},{"name":"userInfo","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","info":"1","storage":"1","varName2":"id","name":"Store Member Info"},{"member":"1","varName":"","info":"2","storage":"1","varName2":"username","name":"Store Member Info"},{"member":"1","varName":"","info":"4","storage":"1","varName2":"color","name":"Store Member Info"},{"member":"1","varName":"","info":"15","storage":"1","varName2":"status","name":"Store Member Info"},{"member":"1","varName":"","info":"14","storage":"1","varName2":"game","name":"Store Member Info"},{"channel":"0","varName":"","message":"```\nUsername: ${tempVars(\"username\")}\nID:       ${tempVars(\"id\")}\nColor:    ${tempVars(\"color\")}\nStatus:   ${tempVars(\"status\")}\nGame:     ${tempVars(\"game\") || \"None\"}\n```","storage":"0","varName2":"","name":"Send Message"}]},{"name":"gennumber","permissions":"NONE","restriction":"1","actions":[{"condition":"0","comparison":"0","value":"2","iftrue":"3","iftrueVal":"2","iffalse":"0","iffalseVal":"","name":"Check Parameters"},{"channel":"0","varName":"","message":"```\nPlease insert a minimum and maximum value in order to use this command:\n?GetRandomNumber [min-value] [max-value]\n```","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"info":"0","infoIndex":"1","storage":"1","varName":"min","name":"Store Command Params"},{"info":"0","infoIndex":"2","storage":"1","varName":"max","name":"Store Command Params"},{"storage":"1","varName":"result","min":"${tempVars(\"min\")}","max":"${tempVars(\"max\")}","name":"Generate Random Number"},{"channel":"0","varName":"","message":"The randomly generated value is: ${tempVars(\"result\")}!","storage":"0","varName2":"","name":"Send Message"}]},{"name":"slap","permissions":"NONE","restriction":"1","actions":[{"condition":"1","comparison":"0","value":"1","iftrue":"3","iftrueVal":"2","iffalse":"0","iffalseVal":"2","name":"Check Parameters"},{"channel":"0","varName":"","message":"```\n\nMention a user in order to use this command!\n```","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":"${member} slapped ${mentionedUser} in the face!","storage":"0","varName2":"","name":"Send Message"}]},{"name":"sendembed","permissions":"NONE","restriction":"1","actions":[{"title":"Embed Message","author":"","color":"#ccff00","timestamp":"false","url":"http://www.google.com","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"This is an embed message.\n\nOne may add a description and/or multiple fields.\n\nUse \"Send Embed Description\" and \"Add Embed Field\" before sending the embed message in order to customize it!","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"0","varName2":"","name":"Send Embed Message"}]},{"name":"sendimage","permissions":"NONE","restriction":"1","actions":[{"url":"http://i.imgur.com/WM2lj00.png","storage":"1","varName":"img","name":"Create Image"},{"storage":"1","varName":"img","channel":"0","varName2":"","message":"","name":"Send Image"}]},{"name":"sendemoji","permissions":"NONE","restriction":"1","actions":[{"channel":"0","varName":"","message":"To send emojis, all you must do is: `:emoji-name:`\n\n:smile: :thumbsup:","storage":"0","varName2":"","name":"Send Message"}]},{"name":"tts","permissions":"NONE","restriction":"1","_id":"UTRRc","actions":[{"condition":"0","comparison":"2","value":"0","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"12","name":"Check Parameters"},{"channel":"0","varName":"","message":"📨 Generating MP3 file...","storage":"1","varName2":"promptOne","name":"Send Message"},{"storage":"0","varName":"","name":"Delete Message"},{"info":"1","infoIndex":"1","storage":"1","varName":"firstResponse","name":"Store Command Params"},{"behavior":"1","interpretation":"0","code":"const googleTTS = require('google-tts-api');\nconst fs = require('fs');\nconst request = require('request');\nconst firstResponse = tempVars(\"firstResponse\");\nconst randomString =  Math.random().toString(36).substring(7);\nconst _this = this;\n\n\nif (firstResponse.length <= 200) {\ngoogleTTS(firstResponse, 'en', 1)   // speed normal = 1 (default), slow = 0.24\n.then(function (url) {\n  request\n  .get(url)\n  .on('error', function(err) {\n    // handle error\n  })\n  .pipe(fs.createWriteStream(\"resources/\" + randomString + '.mp3'));\n  _this.storeValue(randomString, 1, \"randomString\", cache);\n  _this.callNextAction(cache);\n})\n.catch(function (err) {\n  console.error(err.stack);\n});\n} else {\n    msg.channel.send(msg.author + \", please provide a text that has less than 200 characters\")\n                    .then(Errmsg => {\n                        Errmsg.delete(10000);\n                    });\n}\n","storage":"0","varName":"","name":"Run Script"},{"FirstNumber":"${tempVars(\"firstResponse\").length}","info":"2","SecondNumber":"10","storage":"1","varName":"waitTime","name":"Basic Math Operation"},{"FirstNumber":"${tempVars(\"waitTime\")}","info":"0","SecondNumber":"1000","storage":"1","varName":"waitTime","name":"Basic Math Operation"},{"time":"${tempVars(\"waitTime\")}","measurement":"0","name":"Wait"},{"storage":"1","varName":"promptOne","name":"Delete Message"},{"channel":"0","varName":"","file":"resources/${tempVars(\"randomString\")}.mp3","message":"Here is the mp3\nText - ${tempVars(\"firstResponse\")}","name":"Send File"},{"input":"","format":"","filename":"${tempVars(\"randomString\")}.mp3","filepath":"./resources","filetask":"3","name":"File Control"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":":x: Please provide a text to translate into speech ","storage":"1","varName2":"err1","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"err1","name":"Delete Message"}]},{"name":"ttsvc","permissions":"NONE","restriction":"1","_id":"KFlOl","actions":[{"member":"1","varName":"","info":"19","storage":"1","varName2":"voiceCH","name":"Store Member Info"},{"storage":"1","varName":"voiceCH","comparison":"6","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"22","name":"Check Variable Type"},{"condition":"0","comparison":"2","value":"0","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"18","name":"Check Parameters"},{"storage":"0","varName":"","name":"Delete Message"},{"info":"1","infoIndex":"1","storage":"1","varName":"firstResponse","name":"Store Command Params"},{"behavior":"1","interpretation":"0","code":"const googleTTS = require('google-tts-api');\nconst fs = require('fs');\nconst request = require('request');\nconst firstResponse = tempVars(\"firstResponse\");\nconst randomString =  Math.random().toString(36).substring(7);\nconst _this = this;\n\n\nif (firstResponse.length < 200 && firstResponse.length > 47) {\ngoogleTTS(firstResponse, 'en', 1)   // speed normal = 1 (default), slow = 0.24\n.then(function (url) {\n  request\n  .get(url)\n  .on('error', function(err) {\n    // handle error\n  })\n  .pipe(fs.createWriteStream(\"resources/\" + randomString + '.mp3'));\n  _this.storeValue(randomString, 1, \"randomString\", cache);\n  _this.callNextAction(cache);\n})\n.catch(function (err) {\n  console.error(err.stack);\n});\n} else {\n    msg.channel.send(msg.author + \", please provide a text that has less than 200 characters and more than 47 characters to speak in voice chat\")\n                    .then(Errmsg => {\n                        Errmsg.delete(10000);\n                    });\n}\n","storage":"0","varName":"","name":"Run Script"},{"channel":"0","varName":"","message":"?? Generating MP3 file...","storage":"1","varName2":"promptOne","name":"Send Message"},{"FirstNumber":"${tempVars(\"firstResponse\").length}","info":"2","SecondNumber":"10","storage":"1","varName":"waitTime","name":"Basic Math Operation"},{"FirstNumber":"${tempVars(\"waitTime\")}","info":"0","SecondNumber":"1000","storage":"1","varName":"waitTime","name":"Basic Math Operation"},{"time":"${tempVars(\"waitTime\")}","measurement":"0","name":"Wait"},{"storage":"1","varName":"promptOne","name":"Delete Message"},{"channel":"0","varName":"","file":"resources/${tempVars(\"randomString\")}.mp3","message":"Here is the mp3\nText - ${tempVars(\"firstResponse\")}","name":"Send File"},{"channel":"0","varName":"","name":"Join Voice Channel"},{"behavior":"1","interpretation":"0","code":"var VC = msg.member.voiceChannel;\nconst _this = this;\n    VC.join()\n        .then(connection => {\n            const dispatcher = connection.playFile('./resources/${tempVars(\"randomString\")}.mp3');\n            dispatcher.on(\"end\", end => {_this.callNextAction(cache)});\n        })\n        .catch(console.error);","storage":"0","varName":"","name":"Run Script"},{"name":"Leave Voice Channel"},{"time":"1","measurement":"2","name":"Wait"},{"input":"","format":"","filename":"${tempVars(\"randomString\")}.mp3","filepath":"./resources","filetask":"3","name":"File Control"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":":x: Please provide a text to translate into speech ","storage":"1","varName2":"err1","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"err1","name":"Delete Message"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":":x: You are currently not in a voice channel\nPlease go join a voice channel before using this command","storage":"1","varName2":"err1","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"err1","name":"Delete Message"}]},{"name":"inviteclear","permissions":"NONE","restriction":"1","_id":"Mwyhb","actions":[{"member":"0","varName":"","info":"0","storage":"1","varName2":"memberCheck","name":"Store Member Info"},{"member":"0","varName":"","permission":"MANAGE_GUILD","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"10","name":"Check Member Permissions"},{"storage":"1","varName":"memberCheck","comparison":"3","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"6","name":"Check Variable Type"},{"behavior":"0","interpretation":"0","code":"const arraySort = require('array-sort');\nasync function getInvites() {\n    let guildInvites = await msg.guild.fetchInvites();\n    guildInvites = guildInvites.array();\n\n    let inviteInfo = [];\n\n    for (var i = 0; i < guildInvites.length; i++) {\n        if (guildInvites[i].inviter.id == msg.mentions.users.first().id) {\n            inviteInfo.push(guildInvites[i]);\n        }\n    }\n\n    if (inviteInfo.length > 0) {\n        inviteInfo.forEach(inviteToDelete => {\n            inviteToDelete.delete(\"Invite cleared/deleted by \" + msg.author.username);\n        });\n        msg.channel.send({\n            embed: {\n                color: 0x00b200,\n                author : {\n                    name: \"Successfully Cleared Invites\",\n                    icon_url: msg.author.avatarURL\n                },\n                description: \"Cleared \" + inviteInfo.length + \" invites from \" + msg.mentions.users.first()\n            }\n        })\n    } else {\n        msg.channel.send({\n            embed: {\n                color: 0xff6666,\n                author: {\n                    name: \"Error - No Invite Links\",\n                    icon_url: msg.author.avatarURL\n                },\n                description: msg.mentions.users.first() + \" currently has no invite links for this server\"\n            }\n        });\n    }\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"title":"Error - No Users Mentioned","author":"","color":"ff6666","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"errorEmbedNUM","name":"Create Embed Message"},{"storage":"1","varName":"errorEmbedNUM","message":"Please mention a player to clear their invites!\n","name":"Set Embed Description"},{"storage":"1","varName":"errorEmbedNUM","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"},{"name":"End Action Sequence"},{"title":"Error - No Permission","author":"","color":"ff6666","timestamp":"false","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"errorEmbedNP","name":"Create Embed Message"},{"storage":"1","varName":"errorEmbedNP","message":"Please mention a player to clear their invites!\n","name":"Set Embed Description"},{"storage":"1","varName":"errorEmbedNP","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"inviteinfo","permissions":"NONE","restriction":"1","_id":"HIPRW","actions":[{"member":"0","varName":"","info":"0","storage":"1","varName2":"memberCheck","name":"Store Member Info"},{"storage":"1","varName":"memberCheck","comparison":"3","iftrue":"2","iftrueVal":"5","iffalse":"0","iffalseVal":"","name":"Check Variable Type"},{"behavior":"0","interpretation":"0","code":"const arraySort = require('array-sort');\n\nasync function getInvites() {\n    let guildInvites = await msg.guild.fetchInvites();\n    guildInvites = guildInvites.array();\n    console.log(guildInvites.length);\n\n    arraySort(guildInvites, 'uses', {\n        reverse: true\n    });\n\n    let inviteInfo = [];\n\n    guildInvites.forEach(function(invite) {\n        if (invite.inviter.id == msg.author.id) {\n            inviteInfo.push([invite.code, invite.uses]);\n        }\n    });\n\n    if (inviteInfo.length > 0) {\n        var finalMsg = \"\";\n        var totalUses = 0;\n\n        inviteInfo.forEach(function(turnToTable) {\n            finalMsg = finalMsg + turnToTable[0] + \" - \" + turnToTable[1] + \"\\n\";\n            totalUses = totalUses + turnToTable[1];\n        });\n\n        msg.channel.send({\n            embed: {\n                color: 0x00b200,\n                author: {\n                    name: \"Your Invites\",\n                    icon_url: msg.author.avatarURL\n                },\n                fields: [{\n                    name: \"Invite Codes and Uses\",\n                    value: finalMsg\n                }],\n                description: \"Total amount of invites - \" + totalUses\n            }\n        });\n\n\n    } else {\n        msg.channel.send({\n            embed: {\n                color: 0xff6666,\n                author: {\n                    name: \"Error - No Invite Links\",\n                    icon_url: msg.author.avatarURL\n                },\n                description: \"You currently have no invite links for this server\"\n            }\n        });\n    }\n\n\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"behavior":"0","interpretation":"0","code":"const arraySort = require('array-sort');\n\nasync function getInvites() {\n    let guildInvites = await msg.guild.fetchInvites();\n    let mentionedPerson = tempVars(\"memberCheck\");\n    guildInvites = guildInvites.array();\n\n    arraySort(guildInvites, 'uses', {\n        reverse: true\n    });\n\n    let inviteInfo = [];\n\n    guildInvites.forEach(function(invite) {\n        if (invite.inviter.id == mentionedPerson.id) {\n            inviteInfo.push([invite.code, invite.uses]);\n        }\n    });\n\n    if (inviteInfo.length > 0) {\n        var finalMsg = \"\";\n        var totalUses = 0;\n\n        inviteInfo.forEach(function(turnToTable) {\n            finalMsg = finalMsg + turnToTable[0] + \" - \" + turnToTable[1] + \"\\n\";\n            totalUses = totalUses + turnToTable[1];\n        });\n\n        msg.channel.send({\n            embed: {\n                color: 0x00b200,\n                author: {\n                    name: msg.mentions.users.first().username + \"'s Invites\",\n                    icon_url: msg.mentions.users.first().avatarURL\n                },\n                fields: [{\n                    name: \"Invite Codes and Uses\",\n                    value: finalMsg\n                }],\n                description: \"Total amount of invites - \" + totalUses\n            }\n        });\n\n\n    } else {\n        msg.channel.send({\n            embed: {\n                color: 0xff6666,\n                author: {\n                    name: \"Error - No Invite Links\",\n                    icon_url: msg.mentions.users.first().avatarURL\n                },\n                description: mentionedPerson + \" does not currently have any invite links for this server\"\n            }\n        });\n    }\n\n\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"}]},{"name":"invitelk","permissions":"NONE","restriction":"1","_id":"BxYOv","actions":[{"condition":"0","comparison":"2","value":"0","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"","name":"Check Parameters"},{"info":"0","infoIndex":"1","storage":"1","varName":"checkCode","name":"Store Command Params"},{"behavior":"0","interpretation":"1","code":"var checkCode = tempVars(\"checkCode\");\nvar checkCodeLC = tempVars(\"checkCode\").toLowerCase();\nasync function getInvite() {\n\n    let guildInvites = await msg.guild.fetchInvites();\n    var inviteJSON = \"\";\n    var validCode = false;\n\n    if (checkCodeLC.includes(\"discord.gg\")) {\n        try {\n            var inviteResult = await client.fetchInvite(checkCode);\n            checkCode = inviteResult.code;\n            console.dir(inviteResult);\n        }\n        catch(error) {\n            validCode = false;\n        }\n    }\n\n    await guildInvites.forEach(invite => {\n        if (invite.code == checkCode) {\n            inviteJSON = invite;\n            validCode = true;\n        }\n    });\n\n\n    if(validCode == true) {\n        var isTemporary = inviteJSON.temporary.toString();\n        msg.channel.send({\n            embed: {\n             color: 0x00b200,\n             author: {\n                name: \"Invite Code - \" + inviteJSON.code,\n                icon_url: msg.author.avatarURL\n            },\n            description: \"Code created by: \" + inviteJSON.inviter + \"\\n Uses: \" + inviteJSON.uses +\"\\n\" + \"Channel: \" + bot.channels.get(inviteJSON.channel.id) + \"\\nIs Temporary Invite: \" + isTemporary.charAt(0).toUpperCase() + isTemporary.slice(1)\n            }\n        });\n    } else {\n        msg.channel.send({\n            embed: {\n                color: 0xff6666,\n                author: {\n                    name: \"Error - Invalid Invite Code\",\n                    icon_url: msg.author.avatarURL\n                },\n                description: \"Please enter a **VALID** invite code to check. Make sure the invite code is from this server.\"\n            }\n        });\n    }\n}\n     \n  getInvite();","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"title":"Error - No Link Provided","author":"","color":"ff6666","timestamp":"true","url":"","authorIcon":"","imageUrl":"","thumbUrl":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"You didn't provide any invite links or code while using the command\nPlease try again","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"0","varName2":"","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"invitetop","permissions":"NONE","restriction":"1","_id":"yYbmq","actions":[{"behavior":"0","interpretation":"0","code":"const arraySort = require('array-sort');\n\nasync function getInvites() {\n    try {\n        let guildInvites = await msg.guild.fetchInvites();\n    let maxLeaderboardSpots = 10;\n    let finalMsg = \"\";\n    let sortedGuildInvites = [];\n    let CombineResult = [];\n    guildInvites = guildInvites.array();\n\n    arraySort(guildInvites, 'uses', {\n        reverse: true\n    });\n\n    guildInvites.forEach(invites => {\n        sortedGuildInvites.push([invites.inviter.username, invites.uses]);\n    });\n\n    sortedGuildInvites.forEach(function(o) {\n        var existing = CombineResult.filter(function(i) { return i[0] === o[0] })[0];\n    \n        if (!existing)\n        CombineResult.push(o);\n        else\n            existing[1] += o[1];\n    });\n\n    if (CombineResult.length >= maxLeaderboardSpots) {\n        for (var i = 0; i < maxLeaderboardSpots; i++) {\n            finalMsg = finalMsg + CombineResult[i][0] + \" - \" + CombineResult[i][1] + \"\\n\"\n          }\n          msg.channel.send(finalMsg);\n          \n    } else {\n        for (var i = 0; i < CombineResult.length; i++) {\n            finalMsg = finalMsg + CombineResult[i][0] + \" - \" + CombineResult[i][1] + \"\\n\"\n          }\n          msg.channel.send({\n            embed: {\n                color: 0x00b200,\n                author: {\n                    name: \"Server Invite Leaderboard\",\n                    icon_url: msg.author.avatarURL\n                },\n                description: finalMsg\n            }\n        });\n    }\n    }\n    catch(err) {\n        console.log(err);\n    }\n}\n\ngetInvites();","storage":"0","varName":"","name":"Run Script"}]},{"name":"playerinvite","permissions":"NONE","restriction":"1","_id":"ytQZO","actions":[{"member":"0","varName":"","info":"0","storage":"1","varName2":"memberCheck","name":"Store Member Info"},{"storage":"1","varName":"memberCheck","comparison":"3","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"7","name":"Check Variable Type"},{"server":"0","varName":"","info":"1","storage":"1","varName2":"serverID","name":"Store Server Info"},{"member":"0","varName":"","dataName":"${tempVars(\"serverID\")}.inviteManager","defaultVal":"\"None\"","storage":"1","varName2":"inviteUsed","name":"Store Member Data"},{"behavior":"0","interpretation":"0","code":"var inviteCode = tempVars(\"inviteUsed\");\nvar inviteUses = \"\";\nvar inviter = \"\";\n\nif (inviteCode == \"None\") {\n    msg.channel.send({\n        embed: {\n            color: 0xff6666,\n            author: {\n                name: \"Error - No Data\",\n                icon_url: msg.mentions.users.first().avatarURL\n            },\n            description: \"No data could be pulled, the user is not in the database. They may of joined before the bot was active.\"\n        }\n    });\n} else {\nasync function getInvite() {\n    let guildInvites = await msg.guild.fetchInvites();\n    var inviteInfo = await client.fetchInvite(inviteCode);\n\n    await guildInvites.forEach(invite => {\n        if (invite.code == inviteCode) {\n            inviteUses = invite.uses;\n            inviter = invite.inviter;\n        }\n    });\n\n     msg.channel.send({\n            embed: {\n             color: 0x00b200,\n             author: {\n                name: \"Player Invite Code\",\n                icon_url: msg.mentions.users.first().avatarURL\n            },\n            description: msg.mentions.users.first() + \" was invited to the server using the **\" + inviteCode + \"** invite code. \\n The code was created by \" + inviter + \".\" + \"\\n The invite code currently has \" + inviteUses + \" uses\"\n            }\n        });\n    }\n  getInvite();\n}\n\n","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"server":"0","varName":"","info":"1","storage":"1","varName2":"serverID","name":"Store Server Info"},{"member":"1","varName":"","dataName":"${tempVars(\"serverID\")}.inviteManager","defaultVal":"\"None\"","storage":"1","varName2":"inviteUsed","name":"Store Member Data"},{"behavior":"0","interpretation":"0","code":"var inviteCode = tempVars(\"inviteUsed\");\nvar inviteUses = \"\";\nvar inviter = \"\";\n\nif (inviteCode == \"None\") {\n    msg.channel.send({\n        embed: {\n            color: 0xff6666,\n            author: {\n                name: \"Error - No Data\",\n                icon_url: msg.author.avatarURL\n            },\n            description: \"No data could be pulled, the user is not in the database. They may of joined before the bot was active.\"\n        }\n    });\n} else {\nasync function getInvite() {\n    let guildInvites = await msg.guild.fetchInvites();\n    await guildInvites.forEach(invite => {\n        if (invite.code == inviteCode) {\n            inviteUses = invite.uses;\n            inviter = invite.inviter;\n        }\n    });\n\n     msg.channel.send({\n            embed: {\n             color: 0x00b200,\n             author: {\n                name: \"Player Invite Code\",\n                icon_url: msg.author.avatarURL\n            },\n            description: msg.author + \" was invited to the server using the **\" + inviteCode + \"** invite code. \\n The code was created by \" + inviter + \".\" + \"\\n The invite code currently has \" + inviteUses + \" uses\"\n            }\n        });\n    }\n  getInvite();\n}\n\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"deathbattle","permissions":"NONE","restriction":"1","_id":"cidXh","actions":[{"storage":"3","varName":"deathbattleTest","comparison":"6","value":"passed","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"31","name":"Check Variable"},{"behavior":"1","interpretation":"0","code":"if (msg.mentions.members.array().length == 2) {\n  this.storeValue(2, 1, \"mentionedCondition\", cache);\n  this.callNextAction(cache);\n} else if (msg.mentions.members.array().length == 1) {\n  this.storeValue(1, 1, \"mentionedCondition\", cache);\n  this.callNextAction(cache);\n} else {\n  msg.channel.send(':x: Please mention someone to do a deathbattle with or mention two people to have both of them battle each other')\n        .then(Errmsg => {\n            Errmsg.delete(10000);\n        });\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"1","interpretation":"1","code":"var Jimp = require(\"jimp\");\nvar fileName = './resources/deathBattleTemp/sourceimg.png';\nvar playerone;\nvar playertwo;\nvar loadedImage;\nvar OutputfileName = Math.random().toString(36).substring(7);\nvar mentionedCondition = tempVars('mentionedCondition');\nvar messageMentions = msg.mentions.members.array();\nconst _this = this;\n\nif (mentionedCondition == 1) {\n    playerone = msg.author.username;\n    playertwo = messageMentions[0].user.username;\n\n    _this.storeValue(msg.author, 1, \"playerOne\", cache);\n    _this.storeValue(messageMentions[0].user, 1, \"playerTwo\", cache);\n\n    if (playerone.length > 32) {\n        playerone = playerone.substring(0, 29) + \"...\";\n    }\n\n    if (playertwo.length > 32) {\n        playertwo = playertwo.substring(0, 29) + \"...\";\n    }\n\n    Jimp.read(fileName)\n        .then(function(image) {\n            loadedImage = image;\n            Jimp.loadFont(Jimp.FONT_SANS_16_WHITE)\n                .then(function(font) {\n                    loadedImage.print(font, 6, 413, {\n                        text: playerone,\n                        alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER\n                    }, 259, 430)\n                    loadedImage.print(font, 360, 413, {\n                            text: playertwo,\n                            alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER\n                        }, 259, 430)\n                        .write(\"./resources/deathBattleTemp/\" + OutputfileName + \".png\");\n                    _this.storeValue(OutputfileName, 1, \"fileName\", cache);\n                    _this.callNextAction(cache);\n                })\n\n                .catch(function(err) {\n                    console.log(err);\n                });\n        })\n} else {\n    playerone = messageMentions[0].user.username;\n    playertwo = messageMentions[1].user.username;\n\n    _this.storeValue(messageMentions[0].user, 1, \"playerOne\", cache);\n    _this.storeValue(messageMentions[1].user, 1, \"playerTwo\", cache);\n    if (playerone.length > 32) {\n        playerone = playerone.substring(0, 29) + \"...\";\n    }\n\n    if (playertwo.length > 32) {\n        playertwo = playertwo.substring(0, 29) + \"...\";\n    }\n\n    Jimp.read(fileName)\n        .then(function(image) {\n            loadedImage = image;\n            Jimp.loadFont(Jimp.FONT_SANS_16_WHITE)\n                .then(function(font) {\n                    loadedImage.print(font, 6, 413, {\n                        text: playerone,\n                        alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER\n                    }, 259, 430)\n                    loadedImage.print(font, 360, 413, {\n                            text: playertwo,\n                            alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER\n                        }, 259, 430)\n                        .write(\"./resources/deathBattleTemp/\" + OutputfileName + \".png\");\n                    _this.storeValue(OutputfileName, 1, \"fileName\", cache);\n                    _this.callNextAction(cache);\n                })\n\n                .catch(function(err) {\n                    console.log(err);\n                });\n        })\n}","storage":"0","varName":"","name":"Run Script"},{"storage":"1","varName":"mentionedCondition","comparison":"1","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"17","name":"Check Variable"},{"member":"1","varName":"","storage":"1","varName2":"cmdAuthorPFP","name":"Create Image from Avatar"},{"member":"0","varName":"","info":"16","storage":"1","varName2":"mentionedPFPURL","name":"Store Member Info"},{"url":"${tempVars(\"mentionedPFPURL\")}","storage":"1","varName":"mentionedUserPFP","name":"Create Image"},{"url":"resources/deathBattleTemp/${tempVars(\"fileName\")}.png","storage":"1","varName":"baseImg","name":"Create Image"},{"input":"","format":"","filename":"${tempVars(\"fileName\")}.png","filepath":"resources/deathBattleTemp","filetask":"3","name":"File Control"},{"storage":"1","varName":"cmdAuthorPFP","width":"250","height":"260","name":"Resize Image"},{"storage":"1","varName":"mentionedUserPFP","width":"250","height":"260","name":"Resize Image"},{"storage":"1","varName":"baseImg","storage2":"1","varName2":"cmdAuthorPFP","x":"14","y":"134","mask":"0","name":"Draw Image on Image"},{"storage":"1","varName":"baseImg","storage2":"1","varName2":"mentionedUserPFP","x":"358","y":"134","mask":"0","name":"Draw Image on Image"},{"storage":"1","varName":"baseImg","channel":"0","varName2":"","message":"","name":"Send Image"},{"behavior":"0","interpretation":"1","code":"const fs = require('fs');\nconst Discord = require('discord.js');\nconst playerOne = tempVars(\"playerOne\");\nconst playerTwo = tempVars(\"playerTwo\");\nvar possibleActions;\n\nfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    possibleActions = JSON.parse(data);\n    processFile();\n});\n\nfunction processFile() {\n\t\n    var playerOneHealth = 100;\n    var playerTwoHealth = 100;\n    var currentPlayerGoing = Math.floor((Math.random() * 2) + 1);\n    var embedColor = 0x0000ff;\n    var attacksListed = [];\n\n    if (currentPlayerGoing == 1) {\n        attacksListed.push(\"ðŸ”¹ \" +\"__\" + playerOne.username + \"__\" + \"has been randomly chosen to go first\" )\n    } else {\n        attacksListed.push(\"ðŸ”¸\" +\"__\" + playerTwo.username + \"__\" + \"has been randomly chosen to go first\" )\n    }\n\t\n    var Attackembed = new Discord.RichEmbed()\n        .setTitle(\"ðŸ’¥ Battle started\")\n        .addField(playerOne.username, playerOneHealth + \"/100\", true)\n        .addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n        .setColor(embedColor)\n\t\t.setDescription(attacksListed.join(\"\\n\"));\n\t\n    msg.channel.send(Attackembed)\n        .then((embedMessage) => {\n\t\t\t\n            function updateEmbed(atkListed) {\n\t\t\t\tconst TempAttackembed = new Discord.RichEmbed()\n\t\t\t\t\t.setTitle(\"ðŸ’¥ Battle started\")\n\t\t\t\t\t.addField(playerOne.username, playerOneHealth + \"/100\", true)\n\t\t\t\t\t.addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n\t\t\t\t\t.setColor(embedColor)\n\t\t\t\t\t.setDescription(atkListed.join(\"\\n\"));\n\t\t\t\tAttackembed = TempAttackembed;\n                embedMessage.edit(TempAttackembed);\n            }\n\t\t\t\n\t\t\tfunction endEmbed(atkListed) {\n\t\t\t\tconst TempAttackembed = new Discord.RichEmbed()\n\t\t\t\t\t.setTitle(\"ðŸ’¥ Battle has concluded\")\n\t\t\t\t\t.addField(playerOne.username, playerOneHealth + \"/100\", true)\n\t\t\t\t\t.addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n\t\t\t\t\t.setColor(embedColor)\n\t\t\t\t\t.setDescription(atkListed.join(\"\\n\"));\n                embedMessage.edit(TempAttackembed);\n\t\t\t}\n\n\t\t\tvar timeoutID = setInterval(battle, 1500);\n\t\t\t\n            async function battle() {\n\n                if (playerOneHealth > 0 && playerTwoHealth > 0) {\n\n                    const tempAttack = possibleActions[Math.floor(Math.random() * possibleActions.length)];\n                    const attackName = Object.getOwnPropertyNames(tempAttack)[0];\n                    const attackDmg = tempAttack[attackName].damage;\n                    var attackFormat = tempAttack[attackName].format;\n\n                    if (currentPlayerGoing == 1) {\n                        playerTwoHealth = playerTwoHealth - attackDmg;\n                        if (attacksListed.length < 3) {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerOne.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerTwo.username + \"__\");\n                            attacksListed.push(\"ðŸ”¹ \" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 2;\n                            embedColor = 0x00ff00;\n                            updateEmbed(attacksListed);\n                        } else {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerOne.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerTwo.username + \"__\");\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ”¹ \" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 2;\n                            embedColor = 0x00ff00;\n                            updateEmbed(attacksListed);\n                        }\n                    } else {\n                        playerOneHealth = playerOneHealth - attackDmg;\n                        if (attacksListed.length < 3) {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerTwo.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerOne.username);\n                            attacksListed.push(\"ðŸ”¸\" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 1;\n                            embedColor = 0xff0000;\n                            updateEmbed(attacksListed);\n                        } else {\n                            attackFormat = await attackFormat.replace(/{player1}/g, \"__\" + playerTwo.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerOne.username + \"__\");\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ”¸\" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 1;\n                            embedColor = 0xff0000;\n                            updateEmbed(attacksListed);\n                        }\n                    }\n\n                } else {\n                    if (playerTwoHealth <= 0) {\n                        if (attacksListed.length < 3) {\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ† __\" + playerOne.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerTwoHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        } else {\n                            attacksListed.push(\"ðŸ† __\" + playerOne.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerTwoHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            updateEmbed(attacksListed);\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        }\n                    } else if (playerOneHealth <= 0) {\n                        if (attacksListed.length < 3) {\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ† __\" + playerTwo.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerOneHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n\t\t\t\t\t\t\tendEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        } else {\n                            attacksListed.push(\"ðŸ† __\" + playerTwo.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerOneHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        }\n                    }\n                }\n            }\n\t\t\t\n\t\t\t\n        });\n\n}","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"member":"0","varName":"","info":"16","storage":"1","varName2":"mentionedPFPURL","name":"Store Member Info"},{"info":"2","infoIndex":"2","storage":"1","varName":"playerTwoo","name":"Store Command Params"},{"member":"2","varName":"playerTwoo","info":"16","storage":"1","varName2":"playerTwoPFP","name":"Store Member Info"},{"url":"${tempVars(\"mentionedPFPURL\")}","storage":"1","varName":"mentionedPFP","name":"Create Image"},{"url":"${tempVars(\"playerTwoPFP\")}","storage":"1","varName":"mentionedUserPFPTwo","name":"Create Image"},{"url":"resources/deathBattleTemp/${tempVars(\"fileName\")}.png","storage":"1","varName":"baseImg","name":"Create Image"},{"input":"","format":"","filename":"${tempVars(\"fileName\")}.png","filepath":"resources/deathBattleTemp","filetask":"3","name":"File Control"},{"storage":"1","varName":"mentionedPFP","width":"250","height":"260","name":"Resize Image"},{"storage":"1","varName":"mentionedUserPFPTwo","width":"250","height":"260","name":"Resize Image"},{"storage":"1","varName":"baseImg","storage2":"1","varName2":"mentionedPFP","x":"14","y":"134","mask":"0","name":"Draw Image on Image"},{"storage":"1","varName":"baseImg","storage2":"1","varName2":"mentionedUserPFPTwo","x":"358","y":"134","mask":"0","name":"Draw Image on Image"},{"storage":"1","varName":"baseImg","channel":"0","varName2":"","message":"","name":"Send Image"},{"behavior":"0","interpretation":"1","code":"const fs = require('fs');\nconst Discord = require('discord.js');\nconst playerOne = tempVars(\"playerOne\");\nconst playerTwo = tempVars(\"playerTwo\");\nvar possibleActions;\n\nfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    possibleActions = JSON.parse(data);\n    processFile();\n});\n\nfunction processFile() {\n\t\n    var playerOneHealth = 100;\n    var playerTwoHealth = 100;\n    var currentPlayerGoing = Math.floor((Math.random() * 2) + 1);\n    var embedColor = 0x0000ff;\n    var attacksListed = [];\n\n    if (currentPlayerGoing == 1) {\n        attacksListed.push(\"ðŸ”¹ \" +\"__\" + playerOne.username + \"__\" + \"has been randomly chosen to go first\" )\n    } else {\n        attacksListed.push(\"ðŸ”¸\" +\"__\" + playerTwo.username + \"__\" + \"has been randomly chosen to go first\" )\n    }\n\t\n    var Attackembed = new Discord.RichEmbed()\n        .setTitle(\"ðŸ’¥ Battle started\")\n        .addField(playerOne.username, playerOneHealth + \"/100\", true)\n        .addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n        .setColor(embedColor)\n\t\t.setDescription(attacksListed.join(\"\\n\"));\n\t\n    msg.channel.send(Attackembed)\n        .then((embedMessage) => {\n\t\t\t\n            function updateEmbed(atkListed) {\n\t\t\t\tconst TempAttackembed = new Discord.RichEmbed()\n\t\t\t\t\t.setTitle(\"ðŸ’¥ Battle started\")\n\t\t\t\t\t.addField(playerOne.username, playerOneHealth + \"/100\", true)\n\t\t\t\t\t.addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n\t\t\t\t\t.setColor(embedColor)\n\t\t\t\t\t.setDescription(atkListed.join(\"\\n\"));\n\t\t\t\tAttackembed = TempAttackembed;\n                embedMessage.edit(TempAttackembed);\n            }\n\t\t\t\n\t\t\tfunction endEmbed(atkListed) {\n\t\t\t\tconst TempAttackembed = new Discord.RichEmbed()\n\t\t\t\t\t.setTitle(\"ðŸ’¥ Battle has concluded\")\n\t\t\t\t\t.addField(playerOne.username, playerOneHealth + \"/100\", true)\n\t\t\t\t\t.addField(playerTwo.username, playerTwoHealth + \"/100\", true)\n\t\t\t\t\t.setColor(embedColor)\n\t\t\t\t\t.setDescription(atkListed.join(\"\\n\"));\n                embedMessage.edit(TempAttackembed);\n\t\t\t}\n\n\t\t\tvar timeoutID = setInterval(battle, 1500);\n\t\t\t\n            async function battle() {\n\n                if (playerOneHealth > 0 && playerTwoHealth > 0) {\n\n                    const tempAttack = possibleActions[Math.floor(Math.random() * possibleActions.length)];\n                    const attackName = Object.getOwnPropertyNames(tempAttack)[0];\n                    const attackDmg = tempAttack[attackName].damage;\n                    var attackFormat = tempAttack[attackName].format;\n\n                    if (currentPlayerGoing == 1) {\n                        playerTwoHealth = playerTwoHealth - attackDmg;\n                        if (attacksListed.length < 3) {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerOne.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerTwo.username + \"__\");\n                            attacksListed.push(\"ðŸ”¹ \" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 2;\n                            embedColor = 0x00ff00;\n                            updateEmbed(attacksListed);\n                        } else {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerOne.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerTwo.username + \"__\");\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ”¹ \" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 2;\n                            embedColor = 0x00ff00;\n                            updateEmbed(attacksListed);\n                        }\n                    } else {\n                        playerOneHealth = playerOneHealth - attackDmg;\n                        if (attacksListed.length < 3) {\n                            attackFormat = await attackFormat.replace(/{player1}/g,\"__\" + playerTwo.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerOne.username);\n                            attacksListed.push(\"ðŸ”¸\" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 1;\n                            embedColor = 0xff0000;\n                            updateEmbed(attacksListed);\n                        } else {\n                            attackFormat = await attackFormat.replace(/{player1}/g, \"__\" + playerTwo.username + \"__\");\n                            attackFormat = await attackFormat.replace(/{player2}/g,\"__\" + playerOne.username + \"__\");\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ”¸\" + attackFormat + \" (\" + attackDmg + \" DMG)\");\n                            currentPlayerGoing = 1;\n                            embedColor = 0xff0000;\n                            updateEmbed(attacksListed);\n                        }\n                    }\n\n                } else {\n                    if (playerTwoHealth <= 0) {\n                        if (attacksListed.length < 3) {\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ† __\" + playerOne.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerTwoHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        } else {\n                            attacksListed.push(\"ðŸ† __\" + playerOne.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerTwoHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            updateEmbed(attacksListed);\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        }\n                    } else if (playerOneHealth <= 0) {\n                        if (attacksListed.length < 3) {\n                            attacksListed.splice(0, 1);\n                            attacksListed.push(\"ðŸ† __\" + playerTwo.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerOneHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n\t\t\t\t\t\t\tendEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        } else {\n                            attacksListed.push(\"ðŸ† __\" + playerTwo.username + \"__ has won!\");\n\t\t\t\t\t\t\tplayerOneHealth = 0;\n\t\t\t\t\t\t\tembedColor = 0xffff00;\n                            endEmbed(attacksListed);\n\t\t\t\t\t\t\tclearInterval(timeoutID);\n                        }\n                    }\n                }\n            }\n\t\t\t\n\t\t\t\n        });\n\n}","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"channel":"0","varName":"","message":":x: Something is wrong with the deathbattle actionPossibilities.json or sourceimg.png\nThe command cannnot be continued\n\nPlease run ${tempVars(\"botPrefix\")}deathbattlerestore to restore the actionPossibilites.json file to default state","storage":"1","varName2":"err1","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"err1","name":"Delete Message"}]},{"name":"deathbattlerestore","permissions":"NONE","restriction":"2","_id":"eVlgv","actions":[{"token":"","user":"","pass":"","url":"https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Deathbattle%20System/resources/deathBattleTemp/actionPossibilities.json","path":"","storage":"1","varName":"DefaultJSON","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"behavior":"0","interpretation":"0","code":"const DefaultJSON = tempVars('DefaultJSON');\nconst fs = require('fs');\nconst request = require('request');\n\nmsg.channel.send(\"⚠️ Warning \\nProceeding with this command will result of restoration of the default possibleActions.json file along with the sourceimg.png file.\\nAny new actions/events added will be removed.\\n Would you like to proceed?\\nReply with `yes` to proceed or `no` to cancel.\").then((messagePrompt) => {\n    msg.channel.awaitMessages(response => msg.content && response.author == msg.author, {\n            max: 1,\n            time: 30000,\n            errors: ['time'],\n        })\n        .then((collected) => {\n            if(collected.first().content.toLowerCase() == 'yes' ) {\n                msg.author.lastMessage.delete();\n                fs.writeFile(\"resources/deathBattleTemp/actionPossibilities.json\", JSON.stringify(DefaultJSON), function(err) {\n                    if(err) {\n                        return console.log(err);\n                    }\n                });\n\n                request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Deathbattle%20System/resources/deathBattleTemp/sourceimg.png', {encoding: 'binary'}, function(error, response, body) {\n                    fs.writeFile('resources/deathBattleTemp/sourceimg.png', body, 'binary', function (err) {});\n                  });\n                messagePrompt.delete();\n                msg.channel.send(msg.author + \", the `actionPossibilities.json` and `sourceimg.png` file has been restored to default settings!\")\n                            .then(Errmsg => {\n                                Errmsg.delete(10000);\n                            });\n            } else if (collected.first().content.toLowerCase() == 'no' ){\n                msg.author.lastMessage.delete();\n                messagePrompt.delete();\n                msg.channel.send(msg.author + \", the `actionPossibilities.json` and `sourceimg.png` file restoration process has been cancelled!\")\n                            .then(Errmsg => {\n                                Errmsg.delete(10000);\n                            });\n            } else {\n                msg.author.lastMessage.delete();\n                messagePrompt.delete();\n                msg.channel.send(msg.author + \", an invalid response was given, please re-excute the command to try again!\")\n                            .then(Errmsg => {\n                                Errmsg.delete(10000);\n                            });\n            }\n        })\n\n        .catch((error) => {\n            msg.channel.send(msg.author + \", this command has timed out. To go through the prompt again please execute the same command again.\")\n                .then(Errmsg => {\n                    Errmsg.delete(10000);\n                });\n        });\n    });","storage":"0","varName":"","name":"Run Script"},{"storage":"3","varName":"deathbattleTest","changeType":"0","value":"\"passed\"","name":"Control Variable"}]},{"name":"deathbsettings","permissions":"NONE","restriction":"2","_id":"OrGxm","actions":[{"storage":"3","varName":"deathbattleTest","comparison":"6","value":"passed","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"22","name":"Check Variable"},{"info":"0","infoIndex":"1","storage":"1","varName":"settingsInput","name":"Store Command Params"},{"behavior":"1","interpretation":"0","code":"this.storeValue(tempVars(\"settingsInput\").toLowerCase(), 1, \"settingsInput\", cache);\nthis.callNextAction(cache);","storage":"0","varName":"","name":"Run Script"},{"storage":"1","varName":"settingsInput","comparison":"6","value":"add","iftrue":"2","iftrueVal":"11","iffalse":"0","iffalseVal":"","name":"Check Variable"},{"storage":"1","varName":"settingsInput","comparison":"6","value":"remove","iftrue":"2","iftrueVal":"13","iffalse":"0","iffalseVal":"15","name":"Check Variable"},{"storage":"1","varName":"settingsInput","comparison":"6","value":"list","iftrue":"2","iftrueVal":"19","iffalse":"0","iffalseVal":"24","name":"Check Variable"},{"storage":"1","varName":"settingsInput","comparison":"6","value":"info","iftrue":"2","iftrueVal":"16","iffalse":"0","iffalseVal":"18","name":"Check Variable"},{"info":"19","storage":"1","varName2":"botPrefix","name":"Store Bot Client Info"},{"channel":"0","varName":"","message":"- Deathbattle Settings Help -\n`${tempVars(\"botPrefix\")}deathbsettings help` - Displays this help message with command information and usage\n`${tempVars(\"botPrefix\")}deathbsettings add` - Starts a prompt where you can add your own events/actions onto the current deathbattle events/actions\n`${tempVars(\"botPrefix\")}deathbsettings list` - Displays a lsit of deathbattle events/actions\n`${tempVars(\"botPrefix\")}deathbsettings remove {event/action}` - Removes a certain action from the deathbattle events/actions\n`${tempVars(\"botPrefix\")}deathbsettings restore` - Restores the default deathbattle events/actions\n`${tempVars(\"botPrefix\")}deathbsettings info [action/event]` - Shows info for provided action/event","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"},{"behavior":"0","interpretation":"1","code":"var damage;\nvar format;\nvar name;\nvar JSONPairs = [];\nconst fs = require('fs');\n\nasync function preloadStuff() {\n    await fs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n\n        const outputData = JSON.parse(data);\n\n        for(var i in outputData){\n            var val = outputData[i];\n            for(var j in val){\n                var sub_key = j;\n                JSONPairs.push(sub_key.toLowerCase());\n            }\n        }\n    });\n    setupPrompt();\n}\n\nfunction setupPrompt() {\n    msg.delete();\n    msg.channel.send('Please provide the name of the new deathbattle attack').then((messagePrompt) => {\n        msg.channel.awaitMessages(response => msg.content && response.author == msg.author, {\n                max: 1,\n                time: 30000,\n                errors: ['time'],\n            })\n            .then((collected) => {\n                if (JSONPairs.includes(collected.first().content.toLowerCase())) {\n                    messagePrompt.delete();\n                    msg.channel.send(msg.author + \", there is already a action/event named `\" + collected.first().content + \"`.\\nPlease re-execute this command and choose another name!\")\n                    .then(Errmsg => {\n                        Errmsg.delete(10000);\n                    });\n                } else {\n                msg.author.lastMessage.delete();\n                messagePrompt.edit('Deathbattle Attack - ' + collected.first().content + '\\n \\nIf your are satisfied with the name then please provide how much damage it will do (1-100), if not then please reply `cancel` to cancel the prompt to start over');\n                name = collected.first().content;\n                msg.channel.awaitMessages(response => msg.content && response.author == msg.author, {\n                        max: 1,\n                        time: 30000,\n                        errors: ['time'],\n                    })\n                    .then((collected) => {\n                        msg.author.lastMessage.delete();\n                        if (!isNaN(collected.first().content)) {\n                            damage = collected.first().content;\n                            messagePrompt.edit('Deathbattle Attack - ' + name + '\\nDamage - ' + damage + '\\n \\nIf your are satisfied with the name and damage then please provide the format for the attack which should contain {player1} and {player2}\\n For example, `{player1} attacks {player2} with a sword` \\n If you are not satisfied with the name and damage then please reply `cancel` to cancel the prompt to start over');\n                            msg.channel.awaitMessages(response => msg.content && response.author == msg.author, {\n                                    max: 1,\n                                    time: 30000,\n                                    errors: ['time'],\n                                })\n                                .then((collected) => {\n                                    msg.author.lastMessage.delete();\n                                    if (collected.first().content.includes('{player1}') && collected.first().content.includes('{player2}')) {\n\t\t\t\t\t\t\t\t\t\tformat = collected.first().content;\n\t\t\t\t\t\t\t\t\t\tvar tempFormat = format;\n\t\t\t\t\t\t\t\t\t\ttempFormat = tempFormat.replace(/{player1}/g, 'PlayerOne');\n\t\t\t\t\t\t\t\t\t\ttempFormat = tempFormat.replace(/{player2}/g, 'PlayerTwo');\n\t\t\t\t\t\t\t\t\t\ttempFormat = \"`\" + tempFormat + \" (\" + damage + \" DMG)`\";\n\t\t\t\t\t\t\t\t\t\tmessagePrompt.edit('Deathbattle Attack - ' + name + '\\nDamage - ' + damage + '\\nFormat - ' + format + '\\n\\nThis is how the message will appear in the deathbattle embed - ' + tempFormat + '\\n\\n If you are satisfied with what you see, please reply with `confirm`. Otherwise, please reply `cancel` to stop the prompt and restart the process');\n                                        msg.channel.awaitMessages(response => msg.content && response.author == msg.author, {\n                                                max: 1,\n                                                time: 30000,\n                                                errors: ['time'],\n                                            })\n                                            .then((collected) => {\n                                                msg.author.lastMessage.delete();\n\t\t\t\t\t\t\t\t\t\t\t\tif (collected.first().content.toLowerCase() == 'confirm') {\n                                                    messagePrompt.delete();\n\t\t\t\t\t\t\t\t\t\t\t\t\tfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n                                                        if (err) {\n                                                            throw err;\n                                                        }\n                                                        var actionPossibilitiesData = JSON.parse(data);\n                                                        actionPossibilitiesData.push({[name]:{'damage':damage,'format':format}});\n\n                                                        \n                                                        fs.writeFile(\"resources/deathBattleTemp/actionPossibilities.json\", JSON.stringify(actionPossibilitiesData), function(err) {\n                                                            if(err) {\n                                                                return console.log(err);\n                                                            }\n                                                            msg.channel.send(\"Successfully added new attack to the list of attacks for the deathbattle command!\")\n                                                                .then(Errmsg => {\n                                                                    Errmsg.delete(10000);\n                                                                });\n                                                        }); \n\n                                                    });\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (collected.first().content.toLowerCase() == 'cancel') {\n                                                    messagePrompt.delete();\n                                                    msg.channel.send(msg.author + \", the command has been cancelled. \\nYou can go through the prompt again by re-executing the same command again.\")\n\t\t\t\t\t\t\t\t\t\t\t            .then(Errmsg => {\n\t\t\t\t\t\t\t\t\t\t\t\t            Errmsg.delete(10000);\n\t\t\t\t\t\t\t\t\t\t\t            });\n                                                    \n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n                                            })\n                                            .catch((error) => {\n                                                messagePrompt.delete();\n                                                msg.channel.send(msg.author + \", this command has timed out. To go through the prompt again please re-execute the same command.\")\n                                                    .then(Errmsg => {\n                                                        Errmsg.delete(10000);\n                                                    });\n                                            });\n                                    } else if (collected.first().content.toLowerCase() == 'cancel') {\n                                        messagePrompt.delete();\n\n\t\t\t\t\t\t\t\t\t\tmsg.channel.send(msg.author + \", the command has been cancelled. \\nYou can go through the prompt again by re-executing the same command.\")\n\t\t\t\t\t\t\t\t\t\t\t.then(Errmsg => {\n\t\t\t\t\t\t\t\t\t\t\t\tErrmsg.delete(10000);\n\t\t\t\t\t\t\t\t\t\t\t});\n                                    } else {\n                                        messagePrompt.delete();\n\t\t\t\t\t\t\t\t\t\tmsg.channel.send(msg.author + \" this command has been cacelled due to an invalid response. \\nYou can go through the prompt again by re-executing the same command.\")\n\t\t\t\t\t\t\t\t\t\t\t.then(Errmsg => {\n\t\t\t\t\t\t\t\t\t\t\t\tErrmsg.delete(10000);\n\t\t\t\t\t\t\t\t\t\t});\n                                    }\n                                })\n                                .catch((error) => {\n                                    messagePrompt.delete();\n                                    msg.channel.send(msg.author + \", this command has timed out. To go through the prompt again please re-execute the same command.\")\n                                        .then(Errmsg => {\n                                            Errmsg.delete(10000);\n                                        });\n                                });\n                        } else if (collected.first().content.toLowerCase() == 'cancel') {\n                            messagePrompt.delete();\n                            msg.channel.send(msg.author + \", the command has been cancelled. \\nYou can go through the prompt again by re-executing the same command.\")\n                                .then(Errmsg => {\n                                    Errmsg.delete(10000);\n                                });\n                        } else {\n                            messagePrompt.delete();\n                            msg.channel.send(msg.author + \", the command has been cancelled as you didn't provide a valid number. To go through the prompt again please execute the same command again\")\n                                .then(Errmsg => {\n                                    Errmsg.delete(10000);\n                                });\n                        }\n                    })\n                    .catch((error) => {\n                        messagePrompt.delete();\n                        msg.channel.send(msg.author + \", this command has timed out. To go through the prompt again please re-execute the same command.\")\n                            .then(Errmsg => {\n                                Errmsg.delete(10000);\n                            });\n                    });\n                }\n            })\n            .catch((error) => {\n                messagePrompt.delete();\n                msg.channel.send(msg.author + \", this command has timed out. To go through the prompt again please re-execute the same command.\")\n                    .then(Errmsg => {\n                        Errmsg.delete(10000);\n                    });\n            });\n    });\n}\n\n\npreloadStuff();","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"info":"1","infoIndex":"2","storage":"1","varName":"firstParam","name":"Store Command Params"},{"behavior":"0","interpretation":"1","code":"var firstParam = tempVars('firstParam');\nconst fs = require('fs');\nvar jsonValue;\n\nfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    \n    var currentData = JSON.parse(data);\n    var JSONPairs = [];\n\n    for(var i in currentData){\n        var val = currentData[i];\n        for(var j in val){\n            var sub_key = j;\n            JSONPairs.push(sub_key.toLowerCase());\n        }\n    }\n\n    if (JSONPairs.includes(firstParam.toLowerCase())) {\n        for (i = 0; i < JSONPairs.length; i++) {\n            if (JSONPairs[i].toLowerCase() == firstParam.toLowerCase()) {\n                jsonValue = i;\n                deleteAction();\n                break;\n            }\n        }\n    } else {\n        msg.channel.send(msg.author + \", you have not provided a valid action/event. \\nPlease re-execute the command and enter a valid action/event.\")\n            .then(Errmsg => {\n                Errmsg.delete(10000);\n             });\n        msg.delete();\n    }\n\n    function deleteAction() {\n        if (jsonValue == 0) {\n            currentData.splice(0,1);\n        } else {\n            currentData.splice(jsonValue,jsonValue);\n        }\n        fs.writeFile(\"resources/deathBattleTemp/actionPossibilities.json\", JSON.stringify(currentData), function(err) {\n            if(err) {\n                return console.log(err);\n            }\n        });\n        msg.channel.send(msg.author + \", the action/event `\" + firstParam + \"` has been deleted.\")\n            .then(Errmsg => {\n                Errmsg.delete(10000);\n             });\n        msg.delete();\n    }\n\n});","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"info":"1","infoIndex":"2","storage":"1","varName":"firstParam","name":"Store Command Params"},{"behavior":"0","interpretation":"1","code":"var firstParam = tempVars('firstParam');\nconst fs = require('fs');\nvar jsonValue;\n\nfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    \n    var originalData = JSON.parse(data);\n    var currentData = JSON.parse(data);\n    var JSONPairs = [];\n    var originalJSONPairs = [];\n\n    for(var i in currentData){\n        var val = currentData[i];\n        for(var j in val){\n            var sub_key = j;\n            JSONPairs.push(sub_key.toLowerCase());\n            originalJSONPairs.push(sub_key);\n        }\n    }\n\n    if (JSONPairs.includes(firstParam.toLowerCase())) {\n        for (i = 0; i < JSONPairs.length; i++) {\n            if (JSONPairs[i].toLowerCase() == firstParam.toLowerCase()) {\n                jsonValue = i;\n                showEmbed();\n                break;\n            }\n        }\n    } else {\n        msg.channel.send(msg.author + \", you have not provided a valid action/event. \\nPlease re-execute the command and enter a valid action/event.\")\n            .then(Errmsg => {\n                Errmsg.delete(10000);\n             });\n        msg.delete();\n    }\n\n    function showEmbed() {\n            originalJSONPairs.push(sub_key);\n        const dataName = originalJSONPairs[jsonValue];\n        const dataSet = originalData[jsonValue][dataName];\n        var formatToChange = dataSet.format;\n        formatToChange = formatToChange.replace(/{player1}/g, '__PlayerOne__');\n\t\tformatToChange = formatToChange.replace(/{player2}/g, '__PlayerTwo__');\n        msg.channel.send({embed: {\n            color: 0x0892d0,\n            description: \"Name: `\" + dataName + \"`\\nDamage Count: `\" + dataSet.damage + \"`\\nFormat: `\" + dataSet.format + \"`\\nFormat Example: \" + formatToChange\n          }});\n    }\n\n});","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"info":"19","storage":"1","varName2":"botPrefix","name":"Store Bot Client Info"},{"behavior":"0","interpretation":"1","code":"const fs = require('fs');\nvar finalList = \"\";\nconst botPrefix = tempVars(\"botPrefix\");\n\nfs.readFile('resources/deathBattleTemp/actionPossibilities.json', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n\n    var JSONData = JSON.parse(data);\n    for (i = 0; i < JSONData.length; i++) {\n        var JSONObjectName = Object.keys(JSONData[i])[0];\n        finalList = finalList + JSONObjectName + \"\\n\";\n    }\n\n    msg.channel.send({embed: {\n        color: 0x0892d0,\n        title: \"Deathbattle Actions/Event List\",\n        description: \"The follow is the list of actions and events that happen during a deathbattle.\\nIf you would like more information about the actions, please do `\" + botPrefix + \"deathbsettings info [action]`\\n\\n\" + finalList,\n        timestamp: new Date()\n      }\n    });\n});","storage":"0","varName":"","name":"Run Script"},{"name":"End Action Sequence"},{"info":"19","storage":"1","varName2":"botPrefix","name":"Store Bot Client Info"},{"channel":"0","varName":"","message":":x: Something is wrong with the deathbattle actionPossibilities.json or sourceimg.png\nThe command cannnot be continued\n\nPlease run ${tempVars(\"botPrefix\")}deathbattlerestore to restore the actionPossibilites.json file to default state","storage":"1","varName2":"err1","name":"Send Message"},{"time":"10","measurement":"1","name":"Wait"},{"storage":"1","varName":"err1","name":"Delete Message"}]},{"name":"getusercard","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","storage":"1","varName2":"img","name":"Create Image from Avatar"},{"storage":"1","varName":"img","width":"200","height":"200","name":"Resize Image"},{"member":"1","varName":"","info":"2","storage":"1","varName2":"username","name":"Store Member Info"},{"storage":"1","varName":"img","x":"10","y":"10","font":"fonts/Asimov.fnt","width":"180","text":"${tempVars(\"username\")}","name":"Draw Text on Image"},{"storage":"1","varName":"img","channel":"0","varName2":"","message":"","name":"Send Image"}]},{"name":"getavatar","permissions":"NONE","restriction":"1","actions":[{"member":"1","varName":"","storage":"1","varName2":"img","name":"Create Image from Avatar"},{"storage":"1","varName":"img","channel":"0","varName2":"","message":"","name":"Send Image"}]},{"name":"level","permissions":"NONE","restriction":"1","actions":[{"info":"0","infoIndex":"1","storage":"1","varName":"user","name":"Store Command Params"},{"storage":"0","varName":"","name":"Delete Message"},{"condition":"0","comparison":"0","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"14","name":"Check Parameters"},{"condition":"1","comparison":"0","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"14","name":"Check Parameters"},{"member":"0","varName":"","dataName":"level","defaultVal":"0","storage":"1","varName2":"level","name":"Store Member Data"},{"member":"0","varName":"","dataName":"exp","defaultVal":"0","storage":"1","varName2":"exp","name":"Store Member Data"},{"title":"","author":"Level info","color":"#77B3D4","timestamp":"true","url":"","authorIcon":"https://i.imgur.com/o4HJveu.png","imageUrl":"","thumbUrl":"https://i.imgur.com/o4HJveu.png","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"Level","message":"${tempVars(\"level\")}","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","fieldName":"Experience","message":"${tempVars(\"exp\")}","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","channel":"0","varName2":"","storage3":"1","varName3":"embed-obj","name":"Send Embed Message"},{"time":"3","measurement":"1","name":"Wait"},{"storage":"1","varName":"embed-obj","name":"Delete Message"},{"name":"End Action Sequence"},{"title":"","author":"Incorrect Format!","color":"#ef0000","timestamp":"false","url":"","authorIcon":"https://i.imgur.com/TOhDRK2.png","imageUrl":"","thumbUrl":"https://i.imgur.com/TOhDRK2.png","storage":"1","varName":"error","name":"Create Embed Message"},{"storage":"1","varName":"error","message":"The correct format is:\n\n?level ``<user>``\n\nPlease try again and make sure you follow the format.","name":"Set Embed Description"},{"storage":"1","varName":"error","channel":"0","varName2":"","storage3":"1","varName3":"error-obj","name":"Send Embed Message"},{"time":"3","measurement":"1","name":"Wait"},{"storage":"1","varName":"error-obj","name":"Delete Message"}]},{"name":"rlevel","permissions":"NONE","restriction":"1","actions":[{"info":"0","infoIndex":"1","storage":"1","varName":"member","name":"Store Command Params"},{"storage":"0","varName":"","name":"Delete Message"},{"condition":"0","comparison":"0","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"19","name":"Check Parameters"},{"condition":"1","comparison":"0","value":"1","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"19","name":"Check Parameters"},{"member":"0","varName":"member","info":"22","storage":"1","varName2":"username","name":"Store Member Info"},{"member":"0","varName":"","dataName":"level","defaultVal":"0","storage":"1","varName2":"old-level","name":"Store Member Data"},{"member":"0","varName":"username","dataName":"level","changeType":"0","value":"1","name":"Control Member Data"},{"member":"0","varName":"username","dataName":"exp","changeType":"0","value":"1","name":"Control Member Data"},{"member":"0","varName":"username","dataName":"exp","defaultVal":"0","storage":"1","varName2":"exp","name":"Store Member Data"},{"member":"0","varName":"username","dataName":"level","defaultVal":"0","storage":"1","varName2":"level","name":"Store Member Data"},{"channel":"0","varName":"","message":"Restarting ${tempVars(\"username\")} level...","storage":"1","varName2":"restart","iffalse":"0","iffalseVal":"","name":"Send Message"},{"info":"1","find":"Level ${tempVars(\"old-level\")}","storage":"1","varName":"old-found","name":"Find Role"},{"info":"1","find":"Level 1","storage":"1","varName":"level1-found","name":"Find Role"},{"member":"0","varName2":"","role":"3","varName":"old-found","name":"Remove Member Role"},{"member":"0","varName2":"","role":"3","varName":"level1-found","name":"Add Member Role"},{"time":"3","measurement":"1","name":"Wait"},{"storage":"1","varName":"restart","name":"Delete Message"},{"name":"End Action Sequence"},{"title":"","author":"Incorrect Format!","color":"#ef0000","timestamp":"false","url":"","authorIcon":"https://i.imgur.com/TOhDRK2.png","imageUrl":"","thumbUrl":"https://i.imgur.com/TOhDRK2.png","storage":"1","varName":"error","name":"Create Embed Message"},{"storage":"1","varName":"error","message":"The correct format is:\n\n?rlevel ``<user>``\n\nPlease try again and make sure you follow the format.","name":"Set Embed Description"},{"storage":"1","varName":"error","channel":"0","varName2":"","storage3":"1","varName3":"error-obj","name":"Send Embed Message"},{"time":"3","measurement":"1","name":"Wait"},{"storage":"1","varName":"error-obj","name":"Delete Message"}]}]